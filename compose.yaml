# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  expressjs-server:
    build:
      context: .
    environment:
      NODE_ENV: ${NODE_ENV}
      POSTHOG_API_KEY: ${POSTHOG_API_KEY}
      SESSION_SECRET: ${SESSION_SECRET}
      BREVO_API_KEY: ${BREVO_API_KEY}
      PINOJS_SOURCE_TOKEN: ${PINOJS_SOURCE_TOKEN}
      PRISMA_POSTGRES_CONNECTION_STRING: postgresql://postgres:prismaORM124!@db:5432/public
      PRISMA_POSTGRES_CONNECTION_DIRECT_URL: postgresql://postgres:prismaORM124!@db:5432/public
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_URI: ${MONGODB_URI}
      MONGODB_CONNECTION_STRING: ${MONGODB_CONNECTION_STRING}
      TELEGRAM_BOT_API_KEY: ${TELEGRAM_BOT_API_KEY}
      TELEGRAM_BOT_LOGS_CHAT_ID: ${TELEGRAM_BOT_LOGS_CHAT_ID}
      FRONT_WEB_APP_ORIGIN_URL: ${FRONT_WEB_APP_ORIGIN_URL}
      STRIPE_API_KEY: ${STRIPE_API_KEY}
      STRIPE_MONTHLY_PRICE_ID: ${STRIPE_MONTHLY_PRICE_ID}
      STRIPE_BIANNUAL_PRICE_ID: ${STRIPE_BIANNUAL_PRICE_ID}
      STRIPE_ANNUAL_PRICE_ID: ${STRIPE_ANNUAL_PRICE_ID}
      PORT: ${PORT}
    ports:
      - 3000:3000
    develop:
      watch:
        - path: .
          action: sync+restart #* Synchronize code changes and restart the server
          target: /usr/src/app/
    depends_on:
      db:
        condition: service_started

  # web-app: // UNUSED BUT LEFT HERE FOR FUTURE REFERENCE ON HOW TO SET IT UP
  #   build: 
  #     context: ../web-app
  #     dockerfile: Dockerfile.dev
  #   environment:
  #     VITE_API_BASE_URL: http://localhost:3000 #* Set as an ARG because the webapp is compiled on build (VITE build) and not runtime
  #   ports:
  #     - 3001:3000
  #   # restart: always # Added restart policy for front-end service
  #   develop:
  #     watch:
  #     - path: ../web-app/
  #       action: rebuild
      # - path: ../web-app/package.json
      #   action: rebuild
      # - path: ../web-app/Dockerfile
      #   action: rebuild
      # - path: ../web-app/src
      #   action: sync+restart
      #   target: /usr/src/app/
      # - path: ../web-app/public
      #   action: sync+restart
      #   target: /usr/src/app/
  db:
    image: postgres:16.8
    restart: always
    user: 
      postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=public
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=prismaORM124!
    ports:
      - 5432:5432
    

volumes:
  db-data:

