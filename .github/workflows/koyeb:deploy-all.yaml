name: create :LATEST docker & push image on pull request

on:
    pull_request:
        branches: [ "*" ]

jobs:
    docker-build-and-push:
        runs-on: ubuntu-latest
        steps:
        -
            name: Checkout
            uses: actions/checkout@v4
        -
            name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
        -
            name: Set up QEMU
            uses: docker/setup-qemu-action@v3
        -
            name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
        -
            name: Build and push
            uses: docker/build-push-action@v6
            with:
                context: .
                platforms: linux/amd64,linux/arm64
                push: true
                tags: sergion14/expressjs-template:next

    koyeb-deploy:
        runs-on: ubuntu-latest
        environment: dev
        concurrency: 
            group: "${{ github.ref_name }}"
            cancel-in-progress: true
        steps:
            -
                name: Create application secret
                uses: koyeb/action-git-deploy/secret@v1
                with:
                    secret-name: MY_SECRET
                    secret-value: "${{ secrets.BREVO_API_KEY }}" 

            - 
                name: Install and configure the Koyeb CLI
                uses: koyeb-community/koyeb-actions@v2
                with:
                    api_token: "${{ secrets.KOYEB_API_TOKEN }}"
            - 
                name: Build and deploy the application to Koyeb
                uses: koyeb/action-git-deploy@v1
                with:
                    service-env: "PORT=3000"
                    service-ports: "3000:http"
                    service-routes: "/:3000"
                    service-regions: "fra"
                    docker: "sergion14/expressjs-template:latest"
                    docker-private-registry-secret: "${{ secrets.DOCKER_PRIVATE_REGISTRY_SECRET }}"
                    docker-command: "CMD [\"./startLocal.sh\"]"
